---
import { Image } from 'astro:assets';
import Card from '../ui/Card.astro';

interface Props {
  title: string;
  description: string;
  technologies: string[];
  imageUrl: string;
  githubUrl?: string;
  liveUrl?: string;
  category: string;
}

const { title, description, technologies, imageUrl, githubUrl, liveUrl } = Astro.props;
---

<Card class="h-full bg-white border border-gray-200/50 rounded-xl overflow-hidden will-change-transform">
  <div class="flex flex-col h-full">
    <div class="relative h-[200px] overflow-hidden bg-gray-50">
      <Image 
        src={imageUrl} 
        alt={title}
        width={800}
        height={400}
        class="w-full h-full object-cover will-change-transform"
        loading="lazy"
        decoding="async"
        format="webp"
        quality={60}
      />
    </div>
    
    <div class="flex flex-col flex-grow p-5">
      <h3 class="text-lg font-semibold text-gray-900 mb-2 line-clamp-2">
        {title}
      </h3>
      <p class="text-sm text-gray-600 mb-4 line-clamp-2">{description}</p>
      
      <div class="mt-auto">
        <div class="flex flex-wrap gap-1.5 mb-4">
          {technologies.slice(0, 3).map(tech => (
            <span class="px-2 py-1 bg-gray-50 text-gray-600 text-xs font-medium rounded-md">
              {tech}
            </span>
          ))}
          {technologies.length > 3 && (
            <span class="px-2 py-1 bg-gray-50 text-gray-500 text-xs font-medium rounded-md">
              +{technologies.length - 3} more
            </span>
          )}
        </div>

        <div class="flex gap-4 pt-3 border-t border-gray-100">
          {githubUrl && (
            <a 
              href={githubUrl} 
              class="inline-flex items-center text-sm text-gray-600 hover:text-primary-600" 
              target="_blank" 
              rel="noopener noreferrer"
            >
              <svg class="w-4 h-4 mr-1" fill="currentColor" viewBox="0 0 24 24" aria-hidden="true">
                <path d="M12 0C5.37 0 0 5.37 0 12c0 5.31 3.435 9.795 8.205 11.385.6.105.825-.255.825-.57 0-.285-.015-1.23-.015-2.235-3.015.555-3.795-.735-4.035-1.41-.135-.345-.72-1.41-1.23-1.695-.42-.225-1.02-.78-.015-.795.945-.015 1.62.87 1.845 1.23 1.08 1.815 2.805 1.305 3.495.99.105-.78.42-1.305.765-1.605-2.67-.3-5.46-1.335-5.46-5.925 0-1.305.465-2.385 1.23-3.225-.12-.3-.54-1.53.12-3.18 0 0 1.005-.315 3.3 1.23.96-.27 1.98-.405 3-.405s2.04.135 3 .405c2.295-1.56 3.3-1.23 3.3-1.23.66 1.65.24 2.88.12 3.18.765.84 1.23 1.905 1.23 3.225 0 4.605-2.805 5.625-5.475 5.925.435.375.81 1.095.81 2.22 0 1.605-.015 2.895-.015 3.3 0 .315.225.69.825.57A12.02 12.02 0 0024 12c0-6.63-5.37-12-12-12z"/>
              </svg>
              <span>Code</span>
            </a>
          )}
          {liveUrl && (
            <a 
              href={liveUrl} 
              class="inline-flex items-center text-sm text-gray-600 hover:text-primary-600" 
              target="_blank" 
              rel="noopener noreferrer"
            >
              <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24" aria-hidden="true">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"/>
              </svg>
              <span>Demo</span>
            </a>
          )}
        </div>
      </div>
    </div>
  </div>
</Card>

<style>
  /* Ensure consistent card heights */
  :global(.project-card) {
    height: 100%;
    display: flex;
  }
</style>