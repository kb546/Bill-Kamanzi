---
interface Props {
  category: string;
  skills: string[];
  icon: string;
}

const { category, skills, icon } = Astro.props;
---
<div class="skill-card bg-white rounded-xl border border-gray-200 shadow-sm hover:shadow-md transition-all duration-300 overflow-hidden">
  <div class="p-6">
    <div class="flex items-center gap-3 mb-4">
      <span class="text-2xl">{icon}</span>
      <h3 class="text-xl font-bold text-gray-900">{category}</h3>
    </div>
    <div class="h-px bg-gradient-to-r from-gray-200 via-primary-100 to-gray-200 mb-6"></div>
    <div class="flex flex-wrap gap-2">
      {skills.map(skill => (
        <span class="skill-tag">
          {skill}
        </span>
      ))}
    </div>
  </div>
</div>

<style>
  .skill-card {
    height: 100%;
    background: #ffffff;
  }

  .skill-tag {
    display: inline-block;
    padding: 0.5rem 1rem;
    background-color: var(--color-primary-50);
    color: var(--color-primary-800);
    border-radius: 9999px;
    font-size: 0.875rem;
    font-weight: 500;
    transition: all 0.2s ease;
    border: 1px solid var(--color-primary-100);
  }

  .skill-tag:hover {
    transform: translateY(-1px);
    background-color: var(--color-primary-100);
    border-color: var(--color-primary-200);
    color: var(--color-primary-900);
  }

  /* Responsive adjustments */
  @media (max-width: 640px) {
    .skill-tag {
      padding: 0.375rem 0.75rem;
      font-size: 0.8125rem;
    }
  }
</style>